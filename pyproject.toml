[project]
name = "dspy-zero-to-expert"
version = "0.1.0"
description = "Interactive DSPy learning through Marimo notebooks"
requires-python = ">=3.11"
authors = [
    {name = "DSPy Learning Team", email = "team@dspy-learning.com"}
]
readme = "README.md"
license = {text = "MIT"}
keywords = ["dspy", "marimo", "ai", "machine-learning", "education"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Education",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "marimo>=0.9.0",
    # LLM Providers
    "openai>=1.0.0",
    "anthropic>=0.25.0",
    "cohere>=4.0.0",
    # Core Data Science
    "requests>=2.31.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    # Visualization
    "matplotlib>=3.7.0",
    "plotly>=5.15.0",
    "seaborn>=0.12.0",
    # Machine Learning
    "scikit-learn>=1.3.0",
    "datasets>=2.14.0",
    "transformers>=4.30.0",
    # Vector Databases
    "faiss-cpu>=1.7.4",
    "chromadb>=0.4.0",
    "qdrant-client>=1.6.0",
    # Observability and Monitoring
    "mlflow>=2.8.0",
    "langfuse>=2.0.0",
    # Search and Tools
    "tavily-python>=0.3.0",
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    # Jupyter Integration
    "jupyter>=1.0.0",
    "jupytext>=1.15.0",
    "ipython>=8.14.0",
    "ipykernel>=6.25.0",
    # Configuration and Environment
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    # Utilities
    "rich>=13.0.0",
    "typer>=0.9.0",
    "tqdm>=4.65.0",
    "litellm>=1.74.15.post1",
    "dspy>=2.6.27",
]

[project.optional-dependencies]
dev = [
    # Code Quality
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    
    # Documentation
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.23.0",
    
    # Testing
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-mock>=3.11.0",
    
    # Performance
    "memory-profiler>=0.61.0",
    "py-spy>=0.3.14",
]

all = [
    # GPU Support (optional)
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    
    # Additional Vector DBs
    "weaviate-client>=3.24.0",
    "pinecone-client>=2.2.0",
    
    # Advanced ML
    "sentence-transformers>=2.2.0",
    "huggingface-hub>=0.17.0",
]

[project.urls]
Homepage = "https://github.com/dspy-learning/dspy-zero-to-expert"
Documentation = "https://dspy-learning.github.io/dspy-zero-to-expert"
Repository = "https://github.com/dspy-learning/dspy-zero-to-expert"
Issues = "https://github.com/dspy-learning/dspy-zero-to-expert/issues"

# [project.scripts]
# dspy-setup = "common.cli:setup_command"
# dspy-verify = "common.cli:verify_command"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["common"]

[tool.uv]
dev-dependencies = [
    "ipython>=8.14.0",
    "ipykernel>=6.25.0",
    "notebook>=7.0.0",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "dspy.*",
    "marimo.*",
    "faiss.*",
    "chromadb.*",
    "qdrant_client.*",
    "tavily.*",
    "langfuse.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["common", "00-setup", "01-foundations"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
